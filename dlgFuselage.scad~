module makeMainShape(shrinkValue){
	translate([shrinkValue/2,0,shrinkValue])
	cube([boardLength-shrinkValue,boardWidth-shrinkValue*2,totalHeight],true);
	rotate([0,90,0])translate([0,0,(boardLength+cowlingLength)/2-1-shrinkValue])
	intersection(){
		cylinder(cowlingLength+1, cowlingTailRadius-shrinkValue, cowlingTipRadius-shrinkValue,true);
		translate([-shrinkValue,0,0]) cube([totalHeight,boardWidth-shrinkValue*2,cowlingLength-shrinkValue*2],true);
	}
}


tipDiameter = 15;
shoulderDiameter = 35;
noseLength = 50;
wallThickeness = 0.4;
boomDiameter = 7.5;
fuselageCornerRadius = 8.7;

module makeServo(){
	servoWidth = 15;
	servoHeight = 5;
	servoDepth = 15;
	servoMountThickness = 3;
	servoMountOffset = 5;
	servoMountWidth = 20;

	cube([servoWidth,servoHeight,servoDepth],true);
	translate([0,0,servoMountOffset/2]) cube([servoMountWidth,servoHeight,servoMountThickness],true);
}

module makeNose(offset){
	hull(){
		translate([0,0,noseLength]) sphere(tipDiameter-offset);
		translate([0,0,-offset]) mainFuselage(offset, 1);
		//sphere(shoulderDiameter-offset);
	}
}

module hollowNose(){
	difference(){
		makeNose(0);
		union(){
			makeNose(wallThickeness);
			translate([0,0,-shoulderDiameter/2])
				cube([shoulderDiameter*2,shoulderDiameter*2,shoulderDiameter],true);
		}
	}
}

module solidNose(){
	difference(){
		union(){
			makeNose(0);	
			translate([0,0,-5])
				mainFuselage(wallThickeness*2, 5);
		}
		cylinder(noseLength, boomDiameter, boomDiameter,true);
	}
}

module mainFuselage(offset, length){
hull()
for ( i = [0 : 3] )
	{
		rotate( i * 360 / 4, [0, 0, 1])
		translate([0, shoulderDiameter, 0])
		cylinder(length,fuselageCornerRadius-offset,fuselageCornerRadius-offset);
	}
}
module fuselageLength(length){
	difference(){
		translate([0,0,-length])mainFuselage(0, length);
		translate([0,0,-length-wallThickeness])mainFuselage(wallThickeness, length+wallThickeness*2);
	}
}

solidNose();
//fuselageLength(150);
//hollowNose();
//mainFuselage(0,1);